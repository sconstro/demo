buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("gradle.plugin.com.webcohesion.enunciate:enunciate-gradle:2.5.0")
        classpath "org.flywaydb:flyway-gradle-plugin:4.0"
        classpath('com.netflix.nebula:nebula-release-plugin:4.0.1')
    }


}

group = "ro.demo"
version = "1.0"
ext {
    springBootVersion = "1.3.5.RELEASE"
}

apply plugin: "java"
apply plugin: "com.webcohesion.enunciate"
apply plugin: 'org.flywaydb.flyway'
apply plugin: 'nebula.nebula-release'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def a=project.version.toString().indexOf('-');
if (a>0) {
    project.version = project.version.toString().substring(0,project.version.toString().indexOf('-'));
}


tasks.enunciate {
    configFileName = file("src/main/resources/enunciate.xml")
    File enunciateDistDir = file("dist/docs/api")
    doFirst {
        enunciateDistDir.deleteDir()
        enunciateDistDir.mkdirs()
    }
    export("docs", enunciateDistDir)
}
tasks.enunciate.doFirst { project.delete("build/enunciate") }

flyway {
    locations = [
            'db/migration'
    ]
    driver = ''
    url = ""
    user = ''
    password = ''

    table = 'flywayhistory'
    baselineVersion = 1
    baselineDescription = "Start!"
}



repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}



dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")

    compile("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
//    compile("io.dropwizard.metrics:metrics-core:3.1.2")
    compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-jetty:${springBootVersion}")
    compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compile group: "org.postgresql", name: "postgresql", version: "9.3-1104-jdbc41"
    compile group: "com.h2database", name: "h2", version: "1.4.192"
    //discovery
    compile("org.springframework.cloud:spring-cloud-starter-consul-all:1.0.0.RELEASE")
    compile("org.springframework.cloud:spring-cloud-starter-ribbon:1.1.0.RELEASE")
    //cache
    compile("org.springframework.boot:spring-boot-starter-redis:${springBootVersion}")
    //hystrix
    compile("org.springframework.cloud:spring-cloud-starter-hystrix:1.1.0.RELEASE")
    compile("org.springframework.cloud:spring-cloud-netflix-turbine:1.1.0.RELEASE")
    compile("org.springframework.cloud:spring-cloud-netflix-hystrix-dashboard:1.1.0.RELEASE")


    compile('org.springframework.hateoas:spring-hateoas:0.19.0.RELEASE')
    compile('com.webcohesion.enunciate:enunciate-core-annotations:2.5.0')
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '0.9.0.1'

//    compile("com.netflix.hystrix:hystrix-metrics-event-stream:1.4.23")
    //db migration
    compile("org.flywaydb:flyway-core:4.0")

    compile("net.logstash.logback:logstash-logback-encoder:4.7")

    //thymeleaf
    compile("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")
    testCompile("com.github.tomakehurst:wiremock:2.0.10-beta")
    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
    testCompile("com.jayway.restassured:rest-assured:2.9.0")


}
processResources{
    doLast {
        copy {
            from('src/main/resources') {
                include("*.yml")
                filter {
                    it.replace('${APP_VERSION}', project.version.toString())
                }
            }
            into('build/resources/main')
        }
    }
}
